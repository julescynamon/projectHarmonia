/* empty css                                       */
import { e as createAstro, c as createComponent, r as renderComponent, a as renderTemplate, f as defineScriptVars, m as maybeRenderHead } from '../../chunks/astro/server_BsvY2apF.mjs';
import 'kleur/colors';
import { $ as $$BlogPostLayout } from '../../chunks/BlogPostLayout_WM9bKpjr.mjs';
import { s as supabase } from '../../chunks/supabase_CXSvBnpz.mjs';
/* empty css                                     */
export { renderers } from '../../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro("https://harmonia.jules.com");
const prerender = false;
const $$slug = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$slug;
  const { slug } = Astro2.params;
  const { data: post, error } = await supabase.from("posts").select("*").eq("slug", slug).eq("status", "published").single();
  if (error || !post) {
    console.error(`Erreur lors de la r\xE9cup\xE9ration de l'article ${slug}:`, error);
    return Astro2.redirect("/404");
  }
  const imageUrl = post.cover_url || null;
  return renderTemplate`${renderComponent($$result, "BlogPostLayout", $$BlogPostLayout, { "title": post.seo_title || post.title, "description": post.seo_description || post.excerpt, "image": imageUrl, "category": post.tags?.[0] || "Article", "date": post.published_at || post.created_at, "author": "Na\xEFma", "data-astro-cid-4sn4zg3r": true }, { "default": async ($$result2) => renderTemplate(_a || (_a = __template(["  ", ' <div class="prose prose-lg max-w-none prose-headings:font-serif prose-headings:font-bold prose-h2:text-3xl prose-h3:text-2xl prose-p:text-gray-600 prose-a:text-sage hover:prose-a:text-sage-600 prose-img:rounded-xl prose-img:shadow-soft" data-astro-cid-4sn4zg3r> <div id="article-content" class="tip-tap-content article-display-content" data-astro-cid-4sn4zg3r></div> </div>   <script>(function(){', "\n    // Fonction pour rendre le contenu TipTap en HTML\n    function renderTipTapContent(content) {\n      const container = document.getElementById('article-content');\n      if (!container || !content) return;\n\n      // Convertir le JSON TipTap en HTML\n      const html = convertTipTapToHTML(content);\n      container.innerHTML = html;\n\n      // Rendre les images responsives\n      makeImagesResponsive(container);\n    }\n\n    // Convertir le contenu TipTap en HTML\n    function convertTipTapToHTML(content) {\n      if (typeof content === 'string') return content;\n      \n      let html = '';\n      \n      if (content.content) {\n        for (const node of content.content) {\n          html += renderNode(node);\n        }\n      }\n      \n      return html;\n    }\n\n    // Rendre un n\u0153ud TipTap\n    function renderNode(node) {\n      if (node.type === 'text') {\n        let text = node.text || '';\n        \n        // Appliquer les marques (gras, italique, etc.)\n        if (node.marks) {\n          console.log('Marks trouv\xE9es pour le texte:', node.text, node.marks);\n          for (const mark of node.marks) {\n            switch (mark.type) {\n              case 'bold':\n                console.log('Application du gras pour:', node.text);\n                text = `<strong style=\"font-weight: 700 !important; color: #1f2937 !important;\">${text}</strong>`;\n                break;\n              case 'italic':\n                console.log('Application de l\\'italique pour:', node.text);\n                text = `<em style=\"font-style: italic !important; color: #6b7280 !important;\">${text}</em>`;\n                break;\n              case 'underline':\n                console.log('Application du soulign\xE9 pour:', node.text);\n                text = `<u style=\"text-decoration: underline !important; text-decoration-color: #4a6741 !important; text-decoration-thickness: 2px !important;\">${text}</u>`;\n                break;\n              case 'link':\n                console.log('Application du lien pour:', node.text);\n                text = `<a href=\"${mark.attrs?.href || '#'}\" class=\"text-sage hover:text-sage-600 underline\">${text}</a>`;\n                break;\n            }\n          }\n        }\n        \n        return text;\n      }\n      \n      if (node.type === 'paragraph') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        const align = node.attrs?.textAlign || 'left';\n        return `<p class=\"text-${align}\">${content}</p>`;\n      }\n      \n      if (node.type === 'heading') {\n        const level = node.attrs?.level || 1;\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        const align = node.attrs?.textAlign || 'left';\n        // \xC9viter les H1 dans le contenu de l'article pour ne pas entrer en conflit avec le titre principal\n        const adjustedLevel = level === 1 ? 2 : level;\n        const cssClass = adjustedLevel === 2 ? 'article-h2' : adjustedLevel === 3 ? 'article-h3' : 'article-h4';\n        return `<h${adjustedLevel} class=\"text-${align} ${cssClass}\">${content}</h${adjustedLevel}>`;\n      }\n      \n      if (node.type === 'bulletList') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        return `<ul>${content}</ul>`;\n      }\n      \n      if (node.type === 'orderedList') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        return `<ol>${content}</ol>`;\n      }\n      \n      if (node.type === 'listItem') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        return `<li>${content}</li>`;\n      }\n      \n      if (node.type === 'blockquote') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        return `<blockquote class=\"border-l-4 border-sage pl-4 italic text-gray-700\">${content}</blockquote>`;\n      }\n      \n      if (node.type === 'image') {\n        const src = node.attrs?.src || '';\n        const alt = node.attrs?.alt || '';\n        const title = node.attrs?.title || '';\n        const align = node.attrs?.dataAlign || 'center';\n        \n        return `\n          <figure class=\"my-6 text-${align}\">\n            <img src=\"${src}\" alt=\"${alt}\" title=\"${title}\" class=\"article-display-content-img\" />\n          </figure>\n        `;\n      }\n      \n      if (node.content) {\n        return node.content.map(renderNode).join('');\n      }\n      \n      return '';\n    }\n\n    // Rendre les images responsives (seulement pour les images locales)\n    function makeImagesResponsive(container) {\n      const images = container.querySelectorAll('img');\n      images.forEach(img => {\n        const src = img.src;\n        // Ne pas ajouter de param\xE8tres d'optimisation aux URLs Supabase\n        if (src && !src.includes('supabase.co')) {\n          // G\xE9n\xE9rer des URLs responsives pour les images locales uniquement\n          const widths = [480, 768, 1200, 1600];\n          const srcset = widths.map(w => `${src}?w=${w}&h=${w}&q=80`).join(', ');\n          img.srcset = srcset;\n          img.sizes = '(max-width: 480px) 480px, (max-width: 768px) 768px, (max-width: 1200px) 1200px, 1600px';\n        }\n      });\n    }\n\n    // Rendre le contenu quand la page est charg\xE9e\n    document.addEventListener('DOMContentLoaded', () => {\n      const content = JSON.parse(postContent);\n      console.log('Contenu TipTap re\xE7u:', content);\n      renderTipTapContent(content);\n    });\n  })();<\/script> "], ["  ", ' <div class="prose prose-lg max-w-none prose-headings:font-serif prose-headings:font-bold prose-h2:text-3xl prose-h3:text-2xl prose-p:text-gray-600 prose-a:text-sage hover:prose-a:text-sage-600 prose-img:rounded-xl prose-img:shadow-soft" data-astro-cid-4sn4zg3r> <div id="article-content" class="tip-tap-content article-display-content" data-astro-cid-4sn4zg3r></div> </div>   <script>(function(){', "\n    // Fonction pour rendre le contenu TipTap en HTML\n    function renderTipTapContent(content) {\n      const container = document.getElementById('article-content');\n      if (!container || !content) return;\n\n      // Convertir le JSON TipTap en HTML\n      const html = convertTipTapToHTML(content);\n      container.innerHTML = html;\n\n      // Rendre les images responsives\n      makeImagesResponsive(container);\n    }\n\n    // Convertir le contenu TipTap en HTML\n    function convertTipTapToHTML(content) {\n      if (typeof content === 'string') return content;\n      \n      let html = '';\n      \n      if (content.content) {\n        for (const node of content.content) {\n          html += renderNode(node);\n        }\n      }\n      \n      return html;\n    }\n\n    // Rendre un n\u0153ud TipTap\n    function renderNode(node) {\n      if (node.type === 'text') {\n        let text = node.text || '';\n        \n        // Appliquer les marques (gras, italique, etc.)\n        if (node.marks) {\n          console.log('Marks trouv\xE9es pour le texte:', node.text, node.marks);\n          for (const mark of node.marks) {\n            switch (mark.type) {\n              case 'bold':\n                console.log('Application du gras pour:', node.text);\n                text = \\`<strong style=\"font-weight: 700 !important; color: #1f2937 !important;\">\\${text}</strong>\\`;\n                break;\n              case 'italic':\n                console.log('Application de l\\\\'italique pour:', node.text);\n                text = \\`<em style=\"font-style: italic !important; color: #6b7280 !important;\">\\${text}</em>\\`;\n                break;\n              case 'underline':\n                console.log('Application du soulign\xE9 pour:', node.text);\n                text = \\`<u style=\"text-decoration: underline !important; text-decoration-color: #4a6741 !important; text-decoration-thickness: 2px !important;\">\\${text}</u>\\`;\n                break;\n              case 'link':\n                console.log('Application du lien pour:', node.text);\n                text = \\`<a href=\"\\${mark.attrs?.href || '#'}\" class=\"text-sage hover:text-sage-600 underline\">\\${text}</a>\\`;\n                break;\n            }\n          }\n        }\n        \n        return text;\n      }\n      \n      if (node.type === 'paragraph') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        const align = node.attrs?.textAlign || 'left';\n        return \\`<p class=\"text-\\${align}\">\\${content}</p>\\`;\n      }\n      \n      if (node.type === 'heading') {\n        const level = node.attrs?.level || 1;\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        const align = node.attrs?.textAlign || 'left';\n        // \xC9viter les H1 dans le contenu de l'article pour ne pas entrer en conflit avec le titre principal\n        const adjustedLevel = level === 1 ? 2 : level;\n        const cssClass = adjustedLevel === 2 ? 'article-h2' : adjustedLevel === 3 ? 'article-h3' : 'article-h4';\n        return \\`<h\\${adjustedLevel} class=\"text-\\${align} \\${cssClass}\">\\${content}</h\\${adjustedLevel}>\\`;\n      }\n      \n      if (node.type === 'bulletList') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        return \\`<ul>\\${content}</ul>\\`;\n      }\n      \n      if (node.type === 'orderedList') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        return \\`<ol>\\${content}</ol>\\`;\n      }\n      \n      if (node.type === 'listItem') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        return \\`<li>\\${content}</li>\\`;\n      }\n      \n      if (node.type === 'blockquote') {\n        const content = node.content ? node.content.map(renderNode).join('') : '';\n        return \\`<blockquote class=\"border-l-4 border-sage pl-4 italic text-gray-700\">\\${content}</blockquote>\\`;\n      }\n      \n      if (node.type === 'image') {\n        const src = node.attrs?.src || '';\n        const alt = node.attrs?.alt || '';\n        const title = node.attrs?.title || '';\n        const align = node.attrs?.dataAlign || 'center';\n        \n        return \\`\n          <figure class=\"my-6 text-\\${align}\">\n            <img src=\"\\${src}\" alt=\"\\${alt}\" title=\"\\${title}\" class=\"article-display-content-img\" />\n          </figure>\n        \\`;\n      }\n      \n      if (node.content) {\n        return node.content.map(renderNode).join('');\n      }\n      \n      return '';\n    }\n\n    // Rendre les images responsives (seulement pour les images locales)\n    function makeImagesResponsive(container) {\n      const images = container.querySelectorAll('img');\n      images.forEach(img => {\n        const src = img.src;\n        // Ne pas ajouter de param\xE8tres d'optimisation aux URLs Supabase\n        if (src && !src.includes('supabase.co')) {\n          // G\xE9n\xE9rer des URLs responsives pour les images locales uniquement\n          const widths = [480, 768, 1200, 1600];\n          const srcset = widths.map(w => \\`\\${src}?w=\\${w}&h=\\${w}&q=80\\`).join(', ');\n          img.srcset = srcset;\n          img.sizes = '(max-width: 480px) 480px, (max-width: 768px) 768px, (max-width: 1200px) 1200px, 1600px';\n        }\n      });\n    }\n\n    // Rendre le contenu quand la page est charg\xE9e\n    document.addEventListener('DOMContentLoaded', () => {\n      const content = JSON.parse(postContent);\n      console.log('Contenu TipTap re\xE7u:', content);\n      renderTipTapContent(content);\n    });\n  })();<\/script> "])), post.tags && post.tags.length > 0 && renderTemplate`${maybeRenderHead()}<div class="mb-8 text-center" data-astro-cid-4sn4zg3r> <div class="flex justify-center space-x-2" data-astro-cid-4sn4zg3r> ${post.tags.map((tag) => renderTemplate`<span class="px-3 py-1 bg-sage-100 text-sage-800 rounded-full text-sm" data-astro-cid-4sn4zg3r> ${tag} </span>`)} </div> </div>`, defineScriptVars({ postContent: JSON.stringify(post.content) })) })}`;
}, "/Users/jules/Downloads/harmonia/src/pages/blog/[slug].astro", void 0);

const $$file = "/Users/jules/Downloads/harmonia/src/pages/blog/[slug].astro";
const $$url = "/blog/[slug]";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$slug,
  file: $$file,
  prerender,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };

---
// src/components/ResultsTestimonials.astro
import Card from './ui/Card.astro';

interface Testimonial {
  name: string;
  role: string;
  content: string;
  rating: number;
  image?: string;
  category: 'humain' | 'animal';
  location: string;
}

const testimonials: Testimonial[] = [
  {
    name: 'Marie',
    role: '38 ans ‚Äì Naturopathie humaine',
    content: 'J\'avais perdu toute √©nergie et je ne savais plus par o√π commencer. La s√©ance m\'a permis d\'y voir clair et de repartir avec des conseils simples et un programme concret. Aujourd\'hui je me sens beaucoup plus l√©g√®re et apais√©e.',
    rating: 5,
    category: 'humain',
    location: 'Paris'
  },
  {
    name: 'Julien',
    role: 'Ma√Ætre de Luna (chienne de 7 ans) ‚Äì Naturopathie animale',
    content: 'Luna avait souvent des probl√®mes digestifs. On a adapt√© son alimentation avec des solutions naturelles et en quelques jours d√©j√†, elle allait mieux. Je la retrouve plus joyeuse et pleine de vitalit√©.',
    rating: 5,
    category: 'animal',
    location: 'Lyon'
  },
  {
    name: 'Sophie',
    role: '42 ans ‚Äì Soins √©nerg√©tiques humains',
    content: 'Pendant le soin, j\'ai ressenti une chaleur douce et un apaisement profond. Apr√®s, c\'√©tait comme si un poids s\'√©tait lev√©. Je dors enfin sereinement, √ßa a chang√© mon quotidien.',
    rating: 5,
    category: 'humain',
    location: 'Bordeaux'
  },
  {
    name: '√âlodie',
    role: '29 ans ‚Äì Guidance & lecture d\'√¢me',
    content: 'La lecture a √©t√© une vraie r√©v√©lation. J\'ai compris des choses que je ressentais sans jamais r√©ussir √† les exprimer. √áa m\'a donn√© une confiance nouvelle pour avancer dans mes choix de vie.',
    rating: 5,
    category: 'humain',
    location: 'Toulouse'
  }
];

const stats = [
  { number: '200+', label: 'Clients accompagn√©s', description: 'Humains et animaux r√©concili√©s avec leur bien-√™tre' },
  { number: '95%', label: 'Taux de satisfaction', description: 'Des r√©sultats mesurables et durables' },
  { number: '5+', label: 'Ann√©es d\'exp√©rience', description: 'Une expertise approfondie et reconnue' },
  { number: '100%', label: 'Approche naturelle', description: 'Respect total de votre nature profonde' }
];
---

<section class="py-20 md:py-32 bg-gradient-to-b from-sage/5 via-white to-cream/20 relative overflow-hidden">
  <!-- √âl√©ments d√©coratifs -->
  <div class="absolute top-10 right-10 w-64 h-64 bg-gold/5 rounded-full blur-3xl animate-pulse"></div>
  <div class="absolute bottom-10 left-10 w-80 h-80 bg-sage/5 rounded-full blur-3xl animate-pulse" style="animation-delay: 2s;"></div>
  
  <div class="container mx-auto px-4 relative">
    <!-- En-t√™te -->
    <div class="text-center max-w-4xl mx-auto mb-20" data-aos="fade-up" data-aos-duration="1000">
      <div class="inline-block mb-6">
        <span class="bg-gradient-to-r from-sage to-gold bg-clip-text text-transparent font-slogan text-lg font-semibold uppercase tracking-wider">
          R√©sultats & T√©moignages
        </span>
      </div>
      <h2 class="font-heading text-4xl md:text-5xl lg:text-6xl text-ebony mb-8 leading-tight">
        Des <span class="text-sage">transformations</span> qui parlent d'elles-m√™mes
      </h2>
      <p class="font-slogan text-xl text-eucalyptus leading-relaxed">
        D√©couvrez comment l'harmonie retrouv√©e change des vies, humaines et animales
      </p>
    </div>

    <!-- Statistiques avec animations -->
    <div class="grid grid-cols-2 lg:grid-cols-4 gap-6 mb-20">
      {stats.map((stat, index) => (
        <div 
          class="bg-white/80 backdrop-blur-sm rounded-3xl p-6 lg:p-8 text-center shadow-xl border border-sage/10 hover:shadow-2xl transition-all duration-500 hover:-translate-y-2"
          data-aos="fade-up" 
          data-aos-delay={index * 150}
          data-aos-duration="800"
        >
          <div class="relative mb-4">
            <div class="text-4xl lg:text-5xl font-heading text-sage font-bold counter" data-target={stat.number}>
              0
            </div>
            <div class="absolute -top-2 -right-2 w-4 h-4 bg-gradient-to-r from-gold to-sage rounded-full"></div>
          </div>
          <h3 class="font-heading text-lg text-ebony font-semibold mb-2">
            {stat.label}
          </h3>
          <p class="text-sm text-eucalyptus leading-relaxed">
            {stat.description}
          </p>
        </div>
      ))}
    </div>

    <!-- Section t√©moignages avec carousel effect -->
    <div class="mb-16">
      <div class="text-center mb-12" data-aos="fade-up">
        <h3 class="font-heading text-3xl md:text-4xl text-ebony mb-4">
          Ils t√©moignent de leur transformation
        </h3>
        <div class="w-24 h-1 bg-gradient-to-r from-sage to-gold mx-auto rounded-full"></div>
      </div>

      <!-- Grille de t√©moignages -->
      <div class="grid md:grid-cols-2 gap-8 mb-12">
        {testimonials.map((testimonial, index) => (
          <div 
            data-aos="fade-up" 
            data-aos-delay={index * 200} 
            data-aos-duration="800"
            class="group"
          >
            <div class="bg-white rounded-3xl p-8 shadow-xl border border-sage/10 hover:shadow-2xl transition-all duration-500 group-hover:-translate-y-1 h-full flex flex-col">
              <!-- En-t√™te du t√©moignage -->
              <div class="flex items-start justify-between mb-6">
                <div class="flex items-center gap-4">
                  <div class="w-12 h-12 rounded-full bg-gradient-to-r from-sage to-gold flex items-center justify-center shadow-lg">
                    <span class="text-white font-heading font-bold text-lg">
                      {testimonial.name.charAt(0)}
                    </span>
                  </div>
                  <div>
                    <h4 class="font-heading text-lg text-ebony font-semibold">
                      {testimonial.name}
                    </h4>
                    <p class="text-sm text-eucalyptus">
                      {testimonial.role} ‚Ä¢ {testimonial.location}
                    </p>
                  </div>
                </div>
                
                <!-- Badge cat√©gorie -->
                <div class={`px-3 py-1 rounded-full text-xs font-semibold ${
                  testimonial.category === 'humain' 
                    ? 'bg-sage/10 text-sage' 
                    : 'bg-gold/10 text-gold'
                }`}>
                  {testimonial.category === 'humain' ? 'üë§ Humain' : 'üêæ Animal'}
                </div>
              </div>

              <!-- √âtoiles -->
              <div class="flex gap-1 mb-4">
                {[...Array(5)].map((_, i) => (
                  <span class={`text-lg ${i < testimonial.rating ? 'text-gold' : 'text-gray-300'}`}>
                    ‚òÖ
                  </span>
                ))}
              </div>

              <!-- Contenu -->
              <div class="flex-grow">
                <p class="text-eucalyptus leading-relaxed italic mb-4 text-lg">
                  "{testimonial.content}"
                </p>
              </div>

              <!-- Signature -->
              <div class="border-t border-sage/10 pt-4">
                <p class="text-sm text-eucalyptus font-medium text-right">
                  ‚Äî T√©moignage v√©rifi√©
                </p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>


  </div>
</section>

<script>
  // Animation des compteurs
  function animateCounters() {
    const counters = document.querySelectorAll('.counter');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const counter = entry.target;
          const target = counter.getAttribute('data-target');
          const isPercentage = target?.includes('%') || false;
          const isPlus = target?.includes('+') || false;
          const numericValue = parseInt(target?.replace(/[^\d]/g, '') || '0');
          
          let current = 0;
          const increment = numericValue / 50; // 50 steps
          
          const timer = setInterval(() => {
            current += increment;
            if (current >= numericValue) {
              current = numericValue;
              clearInterval(timer);
            }
            
            let displayValue = Math.floor(current).toString();
            if (isPercentage) displayValue += '%';
            if (isPlus) displayValue += '+';
            
            counter.textContent = displayValue;
          }, 40);
          
          observer.unobserve(counter);
        }
      });
    }, { threshold: 0.5 });
    
    counters.forEach(counter => observer.observe(counter));
  }

  // D√©marrer l'animation au chargement
  document.addEventListener('DOMContentLoaded', animateCounters);
</script>

<style>
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .counter {
    transition: all 0.3s ease;
  }
</style>

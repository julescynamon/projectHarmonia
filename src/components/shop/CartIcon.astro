---
const session = Astro.locals.session;
---

<div class="relative inline-block">
  <button
    id="cartButton"
    class="p-2 text-gray-600 hover:text-primary transition-colors"
    aria-label="Ouvrir le panier"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
    </svg>
    <span 
      id="cartCount"
      class="absolute -top-1 -right-1 bg-primary text-green-700 text-xs w-5 h-5 flex items-center justify-center rounded-full hidden"
    ></span>
  </button>
</div>

<script>
  const cartButton = document.getElementById('cartButton');
  const cartCount = document.getElementById('cartCount');

  let isUpdating = false;

  async function updateCartCount() {
    if (isUpdating || !cartCount) return;
    isUpdating = true;

    try {
      const response = await fetch('/api/cart');
      if (!response.ok) throw new Error('Erreur de chargement');
      
      const data = await response.json();
      if (!data?.items) return;

      const count = data.items.reduce((sum, item) => sum + item.quantity, 0);
      cartCount.textContent = count.toString();
      cartCount.classList.toggle('hidden', count === 0);
    } catch (error) {
      console.error('Error updating cart count:', error);
      cartCount.classList.add('hidden');
    } finally {
      isUpdating = false;
    }
  }

  // Écouter l'événement de succès de paiement
  window.addEventListener('payment-success', () => {
    if (cartCount) {
      cartCount.textContent = '0';
      cartCount.classList.add('hidden');
    }
  });

  function handleCartClick() {
    const cart = document.getElementById('cart');
    if (cart) {
      cart.classList.remove('translate-x-full');
    }
  }

  // Initialisation
  if (cartButton) {
    cartButton.addEventListener('click', handleCartClick);
  }

  // Mise à jour initiale
  updateCartCount();

  // Écouter les mises à jour du panier
  let updateTimeout;
  window.addEventListener('cart:updated', () => {
    clearTimeout(updateTimeout);
    updateTimeout = setTimeout(updateCartCount, 300);
  });
</script>

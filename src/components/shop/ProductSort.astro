---
interface Props {
  currentSort: string;
}

const { currentSort = 'newest' } = Astro.props;

const sortOptions = [
  { value: 'newest', label: 'Plus récents' },
  { value: 'price-asc', label: 'Prix croissant' },
  { value: 'price-desc', label: 'Prix décroissant' },
  { value: 'popular', label: 'Plus populaires' },
];
---

<div class="flex justify-end mb-6" data-aos="fade-up">
  <select
    data-sort
    class="px-4 py-2 bg-white border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary/20"
  >
    {sortOptions.map(option => (
      <option value={option.value} selected={currentSort === option.value}>
        {option.label}
      </option>
    ))}
  </select>
</div>

<script>
  const sortSelect = document.querySelector('[data-sort]') as HTMLSelectElement;

  sortSelect?.addEventListener('change', () => {
    document.dispatchEvent(new CustomEvent('sortUpdate', {
      detail: sortSelect.value
    }));
  });
</script>
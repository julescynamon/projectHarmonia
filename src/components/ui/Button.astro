---
interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  [key: string]: any;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className = '',
  ...rest
} = Astro.props;

const variants = {
  primary: 'bg-sage text-white hover:bg-gold hover:text-ebony',
  secondary: 'bg-gold text-ebony hover:bg-sage hover:text-white',
  outline: 'bg-transparent border-2 border-sage text-sage hover:bg-sage hover:text-white'
};

const sizes = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3',
  lg: 'px-8 py-4 text-lg'
};

const baseClasses = 'inline-block font-slogan rounded-full transition-all duration-300 transform hover:-translate-y-1';
const classes = `${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`;

const Tag = href ? 'a' : 'button';
---

<Tag href={href} class={classes} {...rest}>
  <slot />
</Tag>

---
import MainLayout from '../../layouts/MainLayout.astro';
import { pageSEO } from '../../lib/seo';
import Button from '../../components/ui/Button.astro';
import Card from '../../components/ui/Card.astro';
import { getCollection } from 'astro:content';
import NewsletterForm from '../../components/NewsletterForm.astro';

// Désactiver le prerendering pour une mise à jour dynamique
export const prerender = false;

const seo = pageSEO.blog;

// Récupérer tous les articles de blog avec gestion d'erreurs
let posts = [];
try {
  posts = await getCollection('blog');
  console.log('Articles trouvés:', posts.length);
} catch (error) {
  console.error('Erreur lors de la récupération des articles:', error);
}

// Trier les articles par date (du plus récent au plus ancien)
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Catégories uniques pour le filtre
const categories = [...new Set(sortedPosts.map(post => post.data.category?.toLowerCase() || 'non-categorise'))].sort();

// Formater la date
function formatDate(dateStr: string) {
  return new Date(dateStr).toLocaleDateString('fr-FR', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<MainLayout title={seo.title} description={seo.description}>
  <div class="pt-24">
    <!-- Hero Section -->
    <section class="py-20 bg-sage/5 relative overflow-hidden">
      <!-- Motifs de fond -->
      <div class="absolute inset-0 z-0">
        <div class="absolute inset-0 bg-gradient-to-br from-sage/10 to-transparent"></div>
      </div>
      
      <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-3xl mx-auto text-center">
          <h1 class="text-4xl md:text-5xl font-bold mb-6 text-gray-900">
            Blog Harmonia
          </h1>
          <p class="text-xl text-gray-600 mb-8">
            Découvrez nos articles sur la naturopathie, le bien-être et la santé naturelle
          </p>
        </div>
      </div>
    </section>

    <!-- Section Articles -->
    <section class="py-16">
      <div class="container mx-auto px-4">
        <!-- Filtres -->
        <div class="mb-12 flex flex-wrap justify-center gap-4" id="category-filters">
          <Button 
            variant="outline"
            size="sm"
            class="filter-btn active"
            data-category="all"
          >
            Tous
          </Button>
          {categories.map(category => (
            <Button
              variant="outline"
              size="sm"
              class="filter-btn"
              data-category={category}
            >
              {category.charAt(0).toUpperCase() + category.slice(1)}
            </Button>
          ))}
        </div>

        <!-- Grille d'articles -->
        {sortedPosts.length > 0 ? (
          <div id="posts-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {sortedPosts.map(post => (
              <div class="post-card" data-category={post.data.category?.toLowerCase() || 'non-categorise'}>
                <Card
                  variant="hover"
                  title={post.data.title}
                  description={post.data.description}
                  image={post.data.image}
                  date={formatDate(post.data.date)}
                  category={post.data.category}
                  url={`/blog/${post.slug}`}
                />
              </div>
            ))}
          </div>
        ) : (
          <div class="text-center py-12">
            <p class="text-xl text-gray-600">Aucun article disponible pour le moment.</p>
          </div>
        )}
      </div>
    </section>

    <!-- Section Newsletter -->
    <section class="py-16 bg-sage/5">
      
        <div class="max-w-2xl mx-auto">
          <NewsletterForm />
        </div>
    </section>
  </div>
</MainLayout>

<script>
  // Fonction pour mettre à jour la visibilité des articles
  function updateVisibility(category: string) {
    const postCards = document.querySelectorAll('.post-card');
    const postsGrid = document.getElementById('posts-grid');
    let visibleCount = 0;

    // Supprimer l'ancien message s'il existe
    const oldMessage = postsGrid?.querySelector('.col-span-full');
    if (oldMessage) {
      oldMessage.remove();
    }

    postCards.forEach(card => {
      if (category === 'all' || (card as HTMLElement).dataset.category === category) {
        (card as HTMLElement).style.display = 'block';
        visibleCount++;
      } else {
        (card as HTMLElement).style.display = 'none';
      }
    });

    // Afficher un message si aucun article n'est visible
    if (visibleCount === 0 && postsGrid) {
      const noPostsMessage = document.createElement('div');
      noPostsMessage.className = 'text-center py-12 col-span-full';
      noPostsMessage.innerHTML = '<p class="text-xl text-gray-600">Aucun article disponible dans cette catégorie.</p>';
      postsGrid.appendChild(noPostsMessage);
    }
  }

  // Gestionnaire d'événements pour les filtres
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');

    filterButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        // Mettre à jour les classes actives
        filterButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');

        // Mettre à jour la visibilité des articles
        const category = (button as HTMLElement).dataset.category || 'all';
        updateVisibility(category);
      });
    });
  });
</script>

<style>
  .filter-btn.active {
    @apply bg-sage text-white border-sage;
  }
</style>
---
declare global {
  interface Window {
    downloadFile: (productId: string, orderId: string) => void;
  }
}

import MainLayout from '../layouts/MainLayout.astro';
import Toast from '../components/Toast.astro';
import { sendEmailChangeConfirmation } from '../lib/email';

// Vérification de l'authentification
const supabase = Astro.locals.supabase;
const session = Astro.locals.session;

if (!session) {
  return Astro.redirect('/login?returnTo=/mon-compte');
}

// Récupération du rôle depuis la table profiles
const { data: profile } = await supabase
  .from('profiles')
  .select('role')
  .eq('id', session.user.id)
  .single();



// Gestion de la mise à jour du profil via action Astro
if (Astro.request.method === 'POST') {
  interface UpdateResponse {
    success: boolean;
    message: string;
    preventReload?: boolean;
  }

  const response: UpdateResponse = {
    success: false,
    message: ''
  };
  try {
    const formData = await Astro.request.formData();
    const name = formData.get('name')?.toString();
    const email = formData.get('email')?.toString();

    if (!name || !email) {
      throw new Error('Le nom et l\'email sont requis');
    }

    // Mise à jour du nom dans les métadonnées
    const { error: nameError } = await supabase.auth.updateUser({
      data: { name }
    });

    if (nameError) throw nameError;

    // Mise à jour de l'email si modifié
    if (email !== session.user.email) {
      try {
        // Mise à jour dans Supabase
        const { data: updateData, error: emailError } = await supabase.auth.updateUser({
          email
        });

        if (emailError) throw emailError;

        type EmailUpdateResponse = {
          user?: {
            email_change_token?: string;
            confirmation_sent_at?: string;
          } | null;
        };

        // Récupération de l'URL de confirmation depuis la réponse de Supabase
        const confirmationUrl = (updateData as EmailUpdateResponse)?.user?.confirmation_sent_at 
          ? `${import.meta.env.WEBSITE_URL}/auth/confirm-email?token=${(updateData as EmailUpdateResponse).user?.email_change_token}` 
          : null;

        if (confirmationUrl) {
          // Envoi de l'email personnalisé via Resend
          await sendEmailChangeConfirmation(email, confirmationUrl, {
            resendApiKey: import.meta.env.RESEND_API_KEY,
            fromEmail: import.meta.env.FROM_EMAIL,
            websiteUrl: import.meta.env.WEBSITE_URL,
            websiteName: import.meta.env.WEBSITE_NAME
          });
        }

        response.success = true;
        response.message = 'Un email de confirmation a été envoyé à ' + email + '. Vous devez cliquer sur le lien dans l\'email pour confirmer le changement. En attendant, votre ancien email reste actif.';
        // On ne rafraîchit pas la page dans ce cas
        response.preventReload = true;
      } catch (error) {
        console.error('Erreur lors de l\'envoi de l\'email:', error);
        throw new Error('Impossible d\'envoyer l\'email de confirmation. Veuillez réessayer plus tard.');
      }
    } else {
      response.success = true;
      response.message = 'Profil mis à jour avec succès';
    }

  } catch (error) {
    console.error('Erreur lors de la mise à jour du profil:', error);
    response.success = false;
    response.message = error.message || 'Une erreur est survenue lors de la mise à jour du profil';
  }

  return new Response(JSON.stringify(response), {
    status: response.success ? 200 : 400,
    headers: {
      'Content-Type': 'application/json'
    }
  });
}

// Récupération des commandes de l'utilisateur avec leurs produits
const { data: orders, error: ordersError } = await supabase
  .from('orders')
  .select(`
    id,
    user_id,
    total_amount,
    status,
    created_at,
    stripe_session_id
  `)
  .eq('user_id', session.user.id)
  .order('created_at', { ascending: false });



// Si on a des commandes, récupérer les order_items séparément pour déboguer
if (orders && orders.length > 0) {
  const orderIds = orders.map(o => o.id);
  const { data: items, error: itemsError } = await supabase
    .from('order_items')
    .select(`
      id,
      order_id,
      product_id,
      quantity,
      price,
      products (
        id,
        title,
        price,
        pdf_path
      )
    `)
    .in('order_id', orderIds);

  // Associer les items à leurs commandes respectives
  if (items && !itemsError) {
    orders.forEach(order => {
      // Utiliser un type assertion pour éviter l'erreur TypeScript
      (order as any).order_items = items.filter(item => item.order_id === order.id);
    });
  }


}



if (orders) {
  orders.forEach((order, i) => {
    // Détails de la commande ${i + 1}
    // Note: Utilisation de la syntaxe optionnelle pour éviter les erreurs
    const orderItems = (order as any).order_items || [];
    orderItems.forEach(item => {
      // Traitement des articles de la commande
    });
  });
}

// Récupération des métadonnées de l'utilisateur
const { data: { user }, error: userError } = await supabase.auth.getUser();
if (userError) {
  // Gestion silencieuse de l'erreur
}

// Récupération des métadonnées utilisateur de manière plus fiable
const userData = session?.user?.user_metadata || user?.user_metadata || {};

// Debug pour vérifier les données récupérées
console.log('Session user:', session?.user);
console.log('User metadata:', userData);
console.log('User name:', userData.name);
---

<MainLayout
  title="Mon compte"
  description="Gérez vos informations personnelles et consultez vos commandes"
>
  <Toast />
  
  <!-- Hero Section Impact -->
  <section class="relative min-h-[60vh] flex items-center justify-center overflow-hidden hero-section">
    <!-- Background avec image et overlay -->
    <div class="absolute inset-0">
      <img 
        src="/images/contact-hero.webp" 
        alt="Mon compte La Maison Sattvaïa"
        class="w-full h-full object-cover scale-110 transform motion-safe:animate-subtle-zoom"
      />
      <div class="absolute inset-0 bg-gradient-to-r from-ebony/80 via-ebony/60 to-ebony/40"></div>
    </div>
    
    <!-- Contenu principal centré -->
    <div class="container mx-auto px-4 relative z-10 flex flex-col justify-center min-h-[60vh]">
      <div class="max-w-5xl mx-auto text-center">
        <!-- En-tête centré -->
        <div class="motion-safe:animate-fade-in">
          <div class="inline-block mb-8">
            <span class="bg-gradient-to-r from-sage to-gold bg-clip-text text-transparent font-slogan text-xl font-semibold uppercase tracking-wider">
              Votre espace personnel
            </span>
          </div>
          
          <h1 class="font-heading text-4xl md:text-5xl lg:text-6xl mb-8 leading-tight text-white drop-shadow-[0_2px_8px_rgba(0,0,0,0.3)]" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="400">
            Mon <span class="text-sage">compte</span>
          </h1>
          
          <p class="font-slogan text-xl md:text-2xl mb-12 text-white/90 leading-relaxed max-w-4xl mx-auto drop-shadow-[0_2px_4px_rgba(0,0,0,0.2)] italic" data-aos="fade-up" data-aos-duration="800" data-aos-delay="600">
            "Gérez vos informations personnelles et consultez vos accompagnements."
          </p>
        </div>
      </div>
    </div>

    <!-- Transition brush effect -->
    <div class="absolute bottom-0 left-0 w-full z-30">
      <div class="absolute inset-0 bg-gradient-to-b from-transparent to-cream"></div>
      <svg width="100%" height="80" viewBox="0 0 1200 80" preserveAspectRatio="none" class="w-full h-auto">
        <path d="M0,80 C300,20 600,60 1200,40 L1200,80 Z" fill="#faf9f7"/>
      </svg>
    </div>
  </section>

  <!-- Contenu principal -->
  <section class="py-20 md:py-32 bg-gradient-to-b from-cream to-white relative overflow-hidden">
    <!-- Éléments décoratifs -->
    <div class="absolute top-0 left-0 w-72 h-72 bg-sage/5 rounded-full blur-3xl"></div>
    <div class="absolute bottom-0 right-0 w-96 h-96 bg-gold/5 rounded-full blur-3xl"></div>
    <div class="absolute inset-0 bg-geometric-pattern opacity-3"></div>

    <div class="container mx-auto px-4 relative">
      <div class="max-w-6xl mx-auto">

        <!-- Informations personnelles -->
        <div class="bg-white/90 backdrop-blur-sm rounded-3xl p-8 lg:p-12 shadow-xl border border-sage/10 hover:shadow-2xl transition-all duration-500 mb-12" data-aos="fade-up" data-aos-duration="1000">
          <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8 gap-4">
            <div>
              <h2 class="font-heading text-3xl text-ebony mb-2">Informations personnelles</h2>
              <p class="text-eucalyptus">Gérez vos données de profil</p>
            </div>
            <button
              type="button"
              class="group bg-gradient-to-r from-sage/10 to-eucalyptus/10 hover:from-sage hover:to-eucalyptus text-sage hover:text-white px-6 py-3 rounded-2xl transition-all duration-300 flex items-center gap-2 font-medium"
              data-edit-profile
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-300 group-hover:rotate-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
              </svg>
              Modifier
            </button>
          </div>

          <!-- Formulaire de profil (caché par défaut) -->
          <form method="POST" class="hidden space-y-6 mb-8 transition-all duration-300 ease-in-out" data-profile-form>
            <div id="form-message" class="mb-6 hidden"></div>
            
            <div class="grid md:grid-cols-2 gap-6">
              <div class="space-y-2">
                <label for="name" class="block text-ebony font-heading text-lg font-medium">Nom complet</label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  value={userData.name || session?.user?.user_metadata?.name || ''}
                  class="w-full px-6 py-4 rounded-2xl border-2 border-sage/20 focus:border-eucalyptus focus:ring-2 focus:ring-eucalyptus/20 outline-none transition-all duration-300 bg-white/50 backdrop-blur-sm"
                  placeholder="Votre nom complet"
                />
              </div>
              <div class="space-y-2">
                <label for="email" class="block text-ebony font-heading text-lg font-medium">Adresse email</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={user?.email || ''}
                  class="w-full px-6 py-4 rounded-2xl border-2 border-sage/20 focus:border-eucalyptus focus:ring-2 focus:ring-eucalyptus/20 outline-none transition-all duration-300 bg-white/50 backdrop-blur-sm"
                  placeholder="votre@email.com"
                />
              </div>
            </div>
            
            <div class="flex flex-col sm:flex-row justify-end gap-4 pt-4">
              <button
                type="button"
                class="px-6 py-3 text-eucalyptus hover:text-sage transition-colors duration-300 font-medium"
                data-cancel-edit
              >
                Annuler
              </button>
              <button
                type="submit"
                class="bg-gradient-to-r from-sage to-eucalyptus hover:from-eucalyptus hover:to-sage text-white px-8 py-3 rounded-2xl transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl font-medium"
              >
                Enregistrer les modifications
              </button>
            </div>
          </form>

          <!-- Affichage des informations -->
          <div class="grid md:grid-cols-2 gap-8" data-profile-info>
            <div class="space-y-6">
              <div class="bg-sage/5 hover:bg-sage/10 transition-colors duration-300 rounded-2xl p-6">
                <div class="flex items-start gap-4">
                  <div class="w-12 h-12 rounded-full bg-gradient-to-r from-sage to-eucalyptus flex items-center justify-center shrink-0">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                  </div>
                  <div>
                    <h3 class="font-heading text-xl text-ebony mb-2">Nom</h3>
                    <p class="text-eucalyptus font-medium" data-profile-name>{userData.name || session?.user?.user_metadata?.name || 'Non renseigné'}</p>
                  </div>
                </div>
              </div>

              <div class="bg-gold/5 hover:bg-gold/10 transition-colors duration-300 rounded-2xl p-6">
                <div class="flex items-start gap-4">
                  <div class="w-12 h-12 rounded-full bg-gradient-to-r from-gold to-sage flex items-center justify-center shrink-0">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                    </svg>
                  </div>
                  <div>
                    <h3 class="font-heading text-xl text-ebony mb-2">Email</h3>
                    <p class="text-eucalyptus font-medium break-all">{session.user.email}</p>
                  </div>
                </div>
              </div>
            </div>

            <div class="space-y-6">
              <div class="bg-eucalyptus/5 hover:bg-eucalyptus/10 transition-colors duration-300 rounded-2xl p-6">
                <div class="flex items-start gap-4">
                  <div class="w-12 h-12 rounded-full bg-gradient-to-r from-eucalyptus to-gold flex items-center justify-center shrink-0">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                  </div>
                  <div>
                    <h3 class="font-heading text-xl text-ebony mb-2">Membre depuis</h3>
                    <p class="text-eucalyptus font-medium">{new Date(session.user.created_at).toLocaleDateString('fr-FR')}</p>
                  </div>
                </div>
              </div>

              <div class="bg-gradient-to-br from-sage/10 to-eucalyptus/10 rounded-2xl p-6 border border-sage/20">
                <div class="text-center">
                  <div class="w-16 h-16 rounded-full bg-gradient-to-r from-sage to-eucalyptus flex items-center justify-center mx-auto mb-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                  </div>
                  <h3 class="font-heading text-xl text-ebony mb-2">Statut du compte</h3>
                  <p class="text-eucalyptus font-medium">Actif</p>
                </div>
              </div>
            </div>
          </div>
          </div>

        <!-- Historique des commandes -->
        <div class="bg-white/90 backdrop-blur-sm rounded-3xl p-8 lg:p-12 shadow-xl border border-sage/10 hover:shadow-2xl transition-all duration-500 mb-12" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="200">
          <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8 gap-4">
            <div>
              <h2 class="font-heading text-3xl text-ebony mb-2">Mes commandes</h2>
              <p class="text-eucalyptus">Consultez vos achats et téléchargez vos guides</p>
            </div>
            <div class="bg-gradient-to-r from-sage/10 to-eucalyptus/10 rounded-2xl px-6 py-3 border border-sage/20">
              <div class="text-center">
                <div class="text-2xl font-heading text-ebony font-bold">{orders?.length || 0}</div>
                <div class="text-sm text-eucalyptus font-medium">commande{orders?.length !== 1 ? 's' : ''}</div>
              </div>
            </div>
          </div>
          {orders && orders.length > 0 ? (
            <div class="grid gap-6 lg:grid-cols-2">
              <style>
                @keyframes slideIn {
                  from { opacity: 0; transform: translateY(20px); }
                  to { opacity: 1; transform: translateY(0); }
                }
                .order-card {
                  animation: slideIn 0.5s ease-out forwards;
                  opacity: 0;
                }
                .order-card:nth-child(1) { animation-delay: 0.1s; }
                .order-card:nth-child(2) { animation-delay: 0.2s; }
                .order-card:nth-child(3) { animation-delay: 0.3s; }
                .order-card:nth-child(4) { animation-delay: 0.4s; }
              </style>
              {orders.map((order) => (
                <div class="order-card bg-gradient-to-br from-white to-sage/5 hover:from-sage/5 hover:to-eucalyptus/5 rounded-3xl p-6 lg:p-8 transition-all duration-500 hover:shadow-2xl border border-sage/10 hover:border-sage/30 relative overflow-hidden group">
                  <!-- Badge de statut -->
                  <div class="absolute top-4 right-4">
                    <span 
                      class={`px-4 py-2 rounded-full text-sm font-medium shadow-lg ${
                        order.status === 'completed' 
                          ? 'bg-gradient-to-r from-green-100 to-green-200 text-green-800 border border-green-300' 
                          : 'bg-gradient-to-r from-yellow-100 to-yellow-200 text-yellow-800 border border-yellow-300'
                      }`}
                    >
                      {order.status === 'completed' ? 'Payée' : 'En cours'}
                    </span>
                  </div>
                  
                  <!-- En-tête de la commande -->
                  <div class="mb-6">
                    <div class="flex items-center gap-3 mb-3">
                      <div class="w-12 h-12 rounded-full bg-gradient-to-r from-sage to-eucalyptus flex items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                        </svg>
                      </div>
                      <div>
                        <h3 class="font-heading text-xl text-ebony">Commande #{order.id.slice(-8)}</h3>
                        <p class="text-eucalyptus text-sm">
                          {new Date(order.created_at).toLocaleDateString('fr-FR', { 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric' 
                          })}
                        </p>
                      </div>
                    </div>
                    <div class="bg-gradient-to-r from-sage/10 to-eucalyptus/10 rounded-2xl p-4 border border-sage/20">
                      <div class="text-center">
                        <div class="text-3xl font-heading text-ebony font-bold">{order.total_amount.toFixed(2)}€</div>
                        <div class="text-sm text-eucalyptus font-medium">Total de la commande</div>
                      </div>
                    </div>
                  </div>

                  <!-- Articles de la commande -->
                  <div class="space-y-4">
                    {((order as any).order_items || [])?.map((item) => (
                      <div class="bg-white/60 backdrop-blur-sm rounded-2xl p-4 border border-sage/10 hover:border-sage/20 transition-all duration-300">
                        <div class="flex justify-between items-start mb-3">
                          <div class="flex-1">
                            <h4 class="font-heading text-lg text-ebony font-medium mb-1">
                              {item.products?.title || 'Produit non trouvé'}
                            </h4>
                            <p class="text-eucalyptus text-sm">Quantité: {item.quantity}</p>
                          </div>
                          <div class="text-right">
                            <div class="text-xl font-heading text-ebony font-bold">
                              {item.products?.price?.toFixed(2) || '0.00'}€
                            </div>
                          </div>
                        </div>

                        {item.products?.pdf_path ? (
                          <div class="flex items-center justify-between bg-gradient-to-r from-sage/5 to-eucalyptus/5 rounded-xl p-3 border border-sage/10">
                            <div class="flex items-center gap-3">
                              <div class="w-8 h-8 rounded-full bg-gradient-to-r from-sage to-eucalyptus flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                                </svg>
                              </div>
                              <div>
                                <p class="text-sm font-medium text-ebony">PDF disponible</p>
                                {item.download_count > 0 && (
                                  <p class="text-xs text-eucalyptus">
                                    {item.download_count} téléchargement{item.download_count > 1 ? 's' : ''}
                                  </p>
                                )}
                              </div>
                            </div>
                            <button
                              class="group bg-gradient-to-r from-sage to-eucalyptus hover:from-eucalyptus hover:to-sage text-white px-4 py-2 rounded-xl transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl flex items-center gap-2 font-medium"
                              onclick={`downloadFile('${item.products.id}', '${order.id}');`}
                              data-product-id={item.products.id}
                              data-order-id={order.id}
                            >
                              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 transition-transform duration-300 group-hover:-translate-y-1 group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                              </svg>
                              <span>Télécharger</span>
                            </button>
                          </div>
                        ) : (
                          <div class="flex items-center gap-3 bg-red-50 rounded-xl p-3 border border-red-200">
                            <div class="w-8 h-8 rounded-full bg-red-100 flex items-center justify-center">
                              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                              </svg>
                            </div>
                            <p class="text-sm font-medium text-red-700">PDF non disponible</p>
                          </div>
                        )}
                      </div>
                    ))}
                  </div>
                  </div>
                ))}
              </div>
          ) : (
            <div class="text-center py-16 bg-gradient-to-br from-sage/5 to-eucalyptus/5 rounded-3xl border-2 border-dashed border-sage/20">
              <div class="max-w-md mx-auto">
                <div class="w-20 h-20 mx-auto mb-6 rounded-full bg-gradient-to-r from-sage/20 to-eucalyptus/20 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-sage animate-pulse" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                  </svg>
                </div>
                <h3 class="font-heading text-2xl text-ebony mb-4">
                  Aucune commande pour le moment
                </h3>
                <p class="text-eucalyptus text-lg mb-8 leading-relaxed">
                  Découvrez notre sélection de guides et accompagnements pour commencer votre chemin vers l'harmonie.
                </p>
                <a 
                  href="/guides" 
                  class="group inline-flex items-center gap-3 bg-gradient-to-r from-sage to-eucalyptus hover:from-eucalyptus hover:to-sage text-white px-8 py-4 rounded-2xl transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl font-heading text-lg"
                >
                  <span>Découvrir nos guides</span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-300 group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                </a>
              </div>
            </div>
          )}
          </div>

        {(profile?.role === 'admin' || session.user.email === 'tyzranaima@gmail.com') && (
          <div class="bg-white/90 backdrop-blur-sm rounded-3xl p-8 lg:p-12 shadow-xl border border-sage/10 hover:shadow-2xl transition-all duration-500 mb-12" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="400">
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8 gap-4">
              <div>
                <h2 class="font-heading text-3xl text-ebony mb-2">Administration</h2>
                <p class="text-eucalyptus">Gérez le contenu et les fonctionnalités du site</p>
              </div>
              <div class="bg-gradient-to-r from-gold/10 to-sage/10 rounded-2xl px-4 py-2 border border-gold/20">
                <span class="text-sm font-medium text-ebony">Accès administrateur</span>
              </div>
            </div>
            
            <div class="grid gap-6 md:grid-cols-3">
              <a 
                href="/admin/boutique"
                class="group bg-gradient-to-br from-white to-sage/5 hover:from-sage/10 hover:to-eucalyptus/10 rounded-3xl p-6 lg:p-8 transition-all duration-500 hover:shadow-2xl border border-sage/10 hover:border-sage/30 transform hover:-translate-y-2"
                data-admin-link="boutique"
              >
                <div class="text-center">
                  <div class="w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-sage to-eucalyptus flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                    </svg>
                  </div>
                  <h3 class="font-heading text-xl text-ebony mb-2">Boutique</h3>
                  <p class="text-eucalyptus text-sm">Gérer les PDF et produits</p>
                </div>
              </a>

              <a 
                href="/admin/disponibilites"
                class="group bg-gradient-to-br from-white to-gold/5 hover:from-gold/10 hover:to-sage/10 rounded-3xl p-6 lg:p-8 transition-all duration-500 hover:shadow-2xl border border-gold/10 hover:border-gold/30 transform hover:-translate-y-2"
                data-admin-link="disponibilites"
              >
                <div class="text-center">
                  <div class="w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-gold to-sage flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                  </div>
                  <h3 class="font-heading text-xl text-ebony mb-2">Disponibilités</h3>
                  <p class="text-eucalyptus text-sm">Gérer les rendez-vous</p>
                </div>
              </a>

              <a 
                href="/admin/blog"
                class="group bg-gradient-to-br from-white to-eucalyptus/5 hover:from-eucalyptus/10 hover:to-gold/10 rounded-3xl p-6 lg:p-8 transition-all duration-500 hover:shadow-2xl border border-eucalyptus/10 hover:border-eucalyptus/30 transform hover:-translate-y-2"
                data-admin-link="blog"
              >
                <div class="text-center">
                  <div class="w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-eucalyptus to-gold flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                    </svg>
                  </div>
                  <h3 class="font-heading text-xl text-ebony mb-2">Blog</h3>
                  <p class="text-eucalyptus text-sm">Gérer les articles</p>
                </div>
              </a>
            </div>
          </div>
        )}

        <!-- Aide et support -->
        <div class="text-center bg-gradient-to-br from-sage/5 to-eucalyptus/5 rounded-3xl p-8 lg:p-12 border border-sage/20" data-aos="fade-up" data-aos-duration="1000" data-aos-delay="600">
          <div class="max-w-2xl mx-auto">
            <div class="w-16 h-16 mx-auto mb-6 rounded-full bg-gradient-to-r from-sage to-eucalyptus flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
              </svg>
            </div>
            <h2 class="font-heading text-3xl text-ebony mb-4">Besoin d'aide ?</h2>
            <p class="text-eucalyptus text-lg mb-8 leading-relaxed">
              Notre équipe est là pour vous accompagner avec vos commandes et répondre à toutes vos questions.
            </p>
            <a
              href="/contact"
              class="group inline-flex items-center gap-3 bg-gradient-to-r from-sage to-eucalyptus hover:from-eucalyptus hover:to-sage text-white px-8 py-4 rounded-2xl transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl font-heading text-lg"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transition-transform duration-300 group-hover:translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z" />
              </svg>
              Nous contacter
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>
</MainLayout>

<style>
  @keyframes subtle-zoom {
    0% { transform: scale(1.1); }
    50% { transform: scale(1.15); }
    100% { transform: scale(1.1); }
  }

  @keyframes fade-in {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .animate-subtle-zoom {
    animation: subtle-zoom 20s infinite alternate ease-in-out;
  }

  .animate-fade-in {
    animation: fade-in 1.5s ease-out forwards;
  }

  /* Styles pour les éléments de formulaire avec effet glassmorphism */
  .backdrop-blur-sm {
    backdrop-filter: blur(10px);
  }
</style>

<script>
  // Le système de toast est disponible globalement via window.toast

  // Gestion de l'édition du profil
  const editButton = document.querySelector('[data-edit-profile]');
  const profileForm = document.querySelector('[data-profile-form]');
  const profileInfo = document.querySelector('[data-profile-info]');
  const cancelButton = document.querySelector('[data-cancel-edit]');

  // Animation du formulaire
  function showForm() {
    profileForm?.classList.remove('hidden');
    profileInfo?.classList.add('hidden');
    // Focus sur le premier champ
    const nameInput = document.querySelector('#name');
    if (nameInput instanceof HTMLInputElement) {
      nameInput.focus();
    }
  }

  function hideForm() {
    profileForm?.classList.add('hidden');
    profileInfo?.classList.remove('hidden');
  }

  editButton?.addEventListener('click', showForm);
  cancelButton?.addEventListener('click', hideForm);

  // Gestion de la soumission du formulaire
  profileForm?.addEventListener('submit', async (e: SubmitEvent) => {
    e.preventDefault();
    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);

    try {
      const response = await fetch('/mon-compte', {
        method: 'POST',
        body: formData
      });

      const result = await response.json();
      
      if (result.success) {
        window.toast.show(result.message, 'success');
        hideForm();
        // Rafraîchir la page seulement si ce n'est pas une mise à jour d'email
        if (!result.preventReload) {
          setTimeout(() => window.location.reload(), 1500);
        }
      } else {
        window.toast.show(result.message, 'error');
      }
    } catch (error) {
      window.toast.show('Une erreur est survenue lors de la mise à jour du profil', 'error');
      console.error('Erreur:', error);
    }
  });

  // Fonction de téléchargement
  async function downloadFile(productId, orderId) {
    try {

      
      const response = await fetch(`/api/download?productId=${productId}&orderId=${orderId}`, {
        headers: {
          'Accept': 'application/json'
        }
      });
      // Vérification de la réponse
      const responseInfo = {
        status: response.status,
        headers: Object.fromEntries(response.headers.entries())
      };
      
      const text = await response.text();

      
      let data;
      try {
        data = JSON.parse(text);
      } catch (e) {
        console.error('Erreur parsing JSON:', e);
        throw new Error('Réponse invalide du serveur');
      }
      

      
      if (!response.ok) {
        throw new Error(`Erreur lors du téléchargement: ${data.error || 'Erreur inconnue'}`);
      }
      
      if (!data.url) {
        throw new Error('URL de téléchargement non reçue');
      }
      

      window.open(data.url, '_blank');
    } catch (error) {
      console.error('Erreur complète lors du téléchargement:', error);
      window.toast.show(
        error instanceof Error ? error.message : 'Une erreur est survenue lors du téléchargement',
        'error'
      );
    }
  }

  // Rendre la fonction disponible globalement
  window.downloadFile = downloadFile;

  // Gestion des liens admin - DÉSACTIVÉE pour permettre la navigation normale
  // Les liens admin fonctionnent maintenant directement sans JavaScript
</script>

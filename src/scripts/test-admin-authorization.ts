// Script de test pour la logique d'autorisation admin
console.log('üß™ Test de la logique d\'autorisation admin...\n');

// Simulation de diff√©rents sc√©narios
const testScenarios = [
  {
    name: 'Admin principal (tyzranaima@gmail.com)',
    email: 'tyzranaima@gmail.com',
    profile: null,
    expected: 'AUTORIS√â',
    description: 'Doit avoir acc√®s m√™me sans profil dans la base'
  },
  {
    name: 'Admin avec profil',
    email: 'admin@example.com',
    profile: { role: 'admin' },
    expected: 'AUTORIS√â',
    description: 'Doit avoir acc√®s avec profil admin'
  },
  {
    name: 'Utilisateur normal avec profil',
    email: 'user@example.com',
    profile: { role: 'user' },
    expected: 'REFUS√â',
    description: 'Ne doit pas avoir acc√®s'
  },
  {
    name: 'Utilisateur sans profil',
    email: 'newuser@example.com',
    profile: null,
    expected: 'REFUS√â',
    description: 'Ne doit pas avoir acc√®s sans profil'
  }
];

// Fonction pour simuler la logique d'autorisation
function checkAdminAccess(email: string, profile: any): boolean {
  // V√©rification sp√©ciale pour l'admin principal
  const isMainAdmin = email === 'tyzranaima@gmail.com';
  
  if (isMainAdmin) {
    return true;
  }
  
  // V√©rification du profil admin
  if (profile && profile.role === 'admin') {
    return true;
  }
  
  return false;
}

console.log('üìã Sc√©narios de test :');
testScenarios.forEach((scenario, index) => {
  const result = checkAdminAccess(scenario.email, scenario.profile);
  const status = result ? '‚úÖ AUTORIS√â' : '‚ùå REFUS√â';
  const expected = scenario.expected === 'AUTORIS√â' ? '‚úÖ' : '‚ùå';
  
  console.log(`\n${index + 1}. ${scenario.name}`);
  console.log(`   Email: ${scenario.email}`);
  console.log(`   Profil: ${scenario.profile ? `role=${scenario.profile.role}` : 'null'}`);
  console.log(`   R√©sultat: ${status}`);
  console.log(`   Attendu: ${scenario.expected} ${expected}`);
  console.log(`   Description: ${scenario.description}`);
  
  if ((result && scenario.expected === 'AUTORIS√â') || (!result && scenario.expected === 'REFUS√â')) {
    console.log(`   ‚úÖ Test r√©ussi`);
  } else {
    console.log(`   ‚ùå Test √©chou√©`);
  }
});

console.log('\nüîß Code de v√©rification appliqu√© :');
console.log('```typescript');
console.log('// V√©rification sp√©ciale pour l\'admin principal');
console.log('const isMainAdmin = session.user.email === "tyzranaima@gmail.com";');
console.log('');
console.log('if (!isMainAdmin && (profileError || !profile || profile.role !== "admin")) {');
console.log('  return Astro.redirect("/mon-compte");');
console.log('}');
console.log('```');

console.log('\n‚úÖ Tests termin√©s !');
console.log('La logique d\'autorisation est maintenant coh√©rente sur toutes les pages admin.');
